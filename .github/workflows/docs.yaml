name: Docs

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'website/**'
  push:
    branches:
      - 'main'
    paths:
      - 'website/**'
  workflow_dispatch:

permissions:
  contents: read # for actions/checkout to fetch code

jobs:
  staging-release:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      statuses: write
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    if: ${{ github.event_name != 'push' && github.repository_owner == 'volschin' && !github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: website
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.0.0
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: "20.x"
      - name: Build docs
        env:
          GA_KEY: "dummy"
          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
          NODE_OPTIONS: "--max-old-space-size=4096"
          GITHUB_HEAD_REF: ${{ github.head_ref }}
        run: |
          yarn install
          yarn clear
          export DOC_BASE_URL="/$GITHUB_HEAD_REF/"
          export DOC_URL=https://staging.docs.gitops.volschin.github.io
          export STAGING_BUILD=true
          npx update-browserslist-db@latest
          yarn build

      - name: Deploy to GitHub Pages
        id: upload-file
        uses: actions/deploy-pages@v4.0.5
        with:
          preview: true
          path: website/build
 #         destination: staging.docs.gitops.volschin.github.io/${{ github.head_ref }}
          parent: false
          headers: |-
            cache-control: no-cache
      - id: add-docs-status
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
        run: |
          # Pull this out to a heredoc so we can easily interpolate variables
          PAYLOAD=$(cat <<EOF
          {
            "state": "success",
            "context": "Doc site preview",
            "target_url": "https://staging.docs.gitops.volschin.github.io/$GITHUB_HEAD_REF"
          }
          EOF
          )

          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data "$PAYLOAD" \
            --fail

  prod-release:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      statuses: write
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: website
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.0.0
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: "20.x"
      - name: Build docs
        env:
          GA_KEY: ${{ secrets.GA_KEY }}
          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: |
          yarn install
          yarn clear
          npx update-browserslist-db@latest
          yarn build

      - name: Deploy to GitHub Pages
        id: upload-file
        uses: actions/deploy-pages@v4.0.5
        with:
          path: website/build
 #         destination: production.docs.gitops.volschin.github.io
          parent: false
